[project]
name = "django-ai-core"
version = "0.1.0"
description = "Django AI Core provides developer-focused AI features for implementing AI tooling in to Django sites."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "any-llm-sdk==0.20.3",
    "queryish>=0.2.0",
]

[dependency-groups]
dev = [
    "django>=5.2.3",
    "django-stubs>=5.2.5",
    "mkdocs>=1.6.1",
    "mkdocs-awesome-nav>=3.2.0",
    "mkdocs-material>=9.6.20",
]
test = [
    "psycopg[binary]>=3.2.10",
    "pgvector>=0.4.1",
    "pytest-django>=4.11.1",
    "coverage>=7.10.7",
    "pytest>=8.4.1",
    "dj-database-url>=3.0.1",
    "pytest-cov>=7.0.0",
    "tox>=4.30.2",
    "tox-gh-actions>=3.3.0",
    "tox-uv>=1.28.0",
]

[tool.uv]
default-groups = ["dev", "test"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "testapp.settings"
pythonpath = ["./src", "./tests"]
log_level = "INFO"
filterwarnings = [
    "ignore::DeprecationWarning",
]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async"
]

[tool.coverage.run]
branch = true
source = ["src/django_ai_core"]
omit = ["*/migrations/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'def __repr__',
    'if self\.debug',
    'raise AssertionError',
    'raise NotImplementedError',
    'if 0:',
    'if __name__ == .__main__.:'
]
ignore_errors = true
